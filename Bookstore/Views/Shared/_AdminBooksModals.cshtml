@model BooksInputModel


@* Create New Book Modal *@

<div class="modal fade"  id="CreateBook" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Create New Book</h1
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-5">
                
                <form asp-action="CreateBook" enctype="multipart/form-data" asp-controller="Admin" method="post" id="CreateBookForm">

                    @* BookName *@
                    <div class="form-floating mb-3">
                      <input asp-for="BookName" type="text" class="form-control" id="floatingInput" placeholder="name@example.com">
                      <label for="floatingInput">Book Name</label>
                    </div>

                    @* Author *@
                    <div class="form-floating mb-3">
                      <input asp-for="Author" type="text" class="form-control" id="floatingPassword" placeholder="Password">
                      <label for="floatingPassword">Author</label>
                    </div>

                    @* Cover Photo *@
                    <div class="mb-3">
                      <label for="formFileMultiple" class="form-label">Upload Cover Photo</label>
                      <input asp-for="CoverPhoto" class="form-control" />
                    </div>

                    @* Category *@
                    <select class="form-select" asp-items="new SelectList(ViewBag.CategoryDropdown)" asp-for="Category">
                      <option value="" selected>Select The Category</option>
                    </select>

                </form>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                <button type="submit" form="CreateBookForm" class="btn btn-primary">Create</button>
            </div>
        </div>
    </div>
</div>




@* DELETE BOOK MODAL *@

<div class="modal fade" id="DeleteBook" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Book</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-5">
                <form asp-action="DeleteBook" asp-controller="Admin" method="post" id="DeleteBookForm">   
                    <div class="mb-3">
                        <input type="text" asp-for="BookName" class="form-control" id="searchInput" placeholder="Search...">
                    </div>
                    <div id="filteredResults"></div>
                </form>
            </div>

            <script>
                fetch('/Admin/GetBookNames')
                    .then(response => response.json())
                    .then(data => {
                        const searchInput = document.getElementById('searchInput');
                        const filteredResults = document.getElementById('filteredResults');

                        // Function to filter and display results
                        const updateResults = (searchTerm = '') => {
                            const filteredData = data.filter(item => item.toLowerCase().includes(searchTerm.toLowerCase()));
                            filteredResults.innerHTML = '';

                            filteredData.forEach(item => {
                                const listItem = document.createElement('div');
                                listItem.textContent = item;
                                listItem.classList.add('p-2', 'border-bottom', 'cursor-pointer'); // Add cursor-pointer class
                                listItem.addEventListener('click', () => {
                                    searchInput.value = item; // Fill search input with clicked item
                                    updateResults(item); // Update results based on clicked item
                                });
                                filteredResults.appendChild(listItem);
                            });
                        };

                        // Initial call to display all data
                        updateResults();

                        // Event listener for input changes
                        searchInput.addEventListener('input', () => {
                            updateResults(searchInput.value);
                        });
                    })
                    .catch(error => console.error('Error:', error));
            </script>

            <style>
                .cursor-pointer {
                    cursor: pointer;
                }
            </style>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                <button type="submit" form="DeleteBookForm" class="btn btn-primary">Delete</button>
            </div>
        </div>
    </div>
</div>

